/**
 * Documentation in README.md
 */
prefixes = [ ("kb","http://dl-learner.org/examples/double#") ]
 
// knowledge source definition 
ks.type = "OWL File"
ks.fileName = "myopia.owl" 

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { "kb:1", "kb:4", "kb:28", "kb:29", "kb:40", "kb:46", "kb:49", "kb:66", "kb:68", "kb:78", "kb:98", "kb:101", "kb:116", "kb:119", "kb:123", "kb:124", "kb:126", "kb:135", "kb:143", "kb:154", "kb:161", "kb:165", "kb:167", "kb:173", "kb:189", "kb:193", "kb:212", "kb:213", "kb:216", "kb:230", "kb:233", "kb:237", "kb:245", "kb:267", "kb:268", "kb:279", "kb:282", "kb:304", "kb:306", "kb:307", "kb:314", "kb:319", "kb:330", "kb:335", "kb:337", "kb:346", "kb:358", "kb:361", "kb:370", "kb:379", "kb:382", "kb:415", "kb:422", "kb:426", "kb:427", "kb:437", "kb:453", "kb:461", "kb:463", "kb:472", "kb:476", "kb:485", "kb:491", "kb:494", "kb:497", "kb:510", "kb:511", "kb:515", "kb:517", "kb:520", "kb:542", "kb:559", "kb:561", "kb:570", "kb:571", "kb:580", "kb:587", "kb:605", "kb:606", "kb:612", "kb:614"}
lp.negativeExamples = { "kb:2", "kb:3", "kb:5", "kb:6", "kb:7", "kb:8", "kb:9", "kb:10", "kb:11", "kb:12", "kb:13", "kb:14", "kb:15", "kb:16", "kb:17", "kb:18", "kb:19", "kb:20", "kb:21", "kb:22", "kb:23", "kb:24", "kb:25", "kb:26", "kb:27", "kb:30", "kb:31", "kb:32", "kb:33", "kb:34", "kb:35", "kb:36", "kb:37", "kb:38", "kb:39", "kb:41", "kb:42", "kb:43", "kb:44", "kb:45", "kb:47", "kb:48", "kb:50", "kb:51", "kb:52", "kb:53", "kb:54", "kb:55", "kb:56", "kb:57", "kb:58", "kb:59", "kb:60", "kb:61", "kb:62", "kb:63", "kb:64", "kb:65", "kb:67", "kb:69", "kb:70", "kb:71", "kb:72", "kb:73", "kb:74", "kb:75", "kb:76", "kb:77", "kb:79", "kb:80", "kb:81", "kb:82", "kb:83", "kb:84", "kb:85", "kb:86", "kb:87", "kb:88", "kb:89", "kb:90", "kb:91", "kb:92", "kb:93", "kb:94", "kb:95", "kb:96", "kb:97", "kb:99", "kb:100", "kb:102", "kb:103", "kb:104", "kb:105", "kb:106", "kb:107", "kb:108", "kb:109", "kb:110", "kb:111", "kb:112", "kb:113", "kb:114", 
"kb:115", "kb:117", "kb:118", "kb:120", "kb:121", "kb:122", "kb:125", "kb:127", "kb:128", "kb:129", "kb:130", "kb:131", "kb:132", "kb:133", "kb:134", "kb:136", "kb:137", "kb:138", "kb:139", 
"kb:140", "kb:141", "kb:142", "kb:144", "kb:145", "kb:146", "kb:147", "kb:148", "kb:149", "kb:150", "kb:151", "kb:152", "kb:153", "kb:155", "kb:156", "kb:157", "kb:158", "kb:159", "kb:160", 
"kb:162", "kb:163", "kb:164", "kb:166", "kb:168", "kb:169", "kb:170", "kb:171", "kb:172", "kb:174", "kb:175", "kb:176", "kb:177", "kb:178", "kb:179", "kb:180", "kb:181", "kb:182", "kb:183", 
"kb:184", "kb:185", "kb:186", "kb:187", "kb:188", "kb:190", "kb:191", "kb:192", "kb:194", "kb:195", "kb:196", "kb:197", "kb:198", "kb:199", "kb:200", "kb:201", "kb:202", "kb:203", "kb:204", 
"kb:205", "kb:206", "kb:207", "kb:208", "kb:209", "kb:210", "kb:211", "kb:214", "kb:215", "kb:217", "kb:218", "kb:219", "kb:220", "kb:221", "kb:222", "kb:223", "kb:224", "kb:225", "kb:226", 
"kb:227", "kb:228", "kb:229", "kb:231", "kb:232", "kb:234", "kb:235", "kb:236", "kb:238", "kb:239", "kb:240", "kb:241", "kb:242", "kb:243", "kb:244", "kb:246", "kb:247", "kb:248", "kb:249", 
"kb:250", "kb:251", "kb:252", "kb:253", "kb:254", "kb:255", "kb:256", "kb:257", "kb:258", "kb:259", "kb:260", "kb:261", "kb:262", "kb:263", "kb:264", "kb:265", "kb:266", "kb:269", "kb:270", 
"kb:271", "kb:272", "kb:273", "kb:274", "kb:275", "kb:276", "kb:277", "kb:278", "kb:280", "kb:281", "kb:283", "kb:284", "kb:285", "kb:286", "kb:287", "kb:288", "kb:289", "kb:290", "kb:291", 
"kb:292", "kb:293", "kb:294", "kb:295", "kb:296", "kb:297", "kb:298", "kb:299", "kb:300", "kb:301", "kb:302", "kb:303", "kb:305", "kb:308", "kb:309", "kb:310", "kb:311", "kb:312", "kb:313", 
"kb:315", "kb:316", "kb:317", "kb:318", "kb:320", "kb:321", "kb:322", "kb:323", "kb:324", "kb:325", "kb:326", "kb:327", "kb:328", "kb:329", "kb:331", "kb:332", "kb:333", "kb:334", "kb:336", 
"kb:338", "kb:339", "kb:340", "kb:341", "kb:342", "kb:343", "kb:344", "kb:345", "kb:347", "kb:348", "kb:349", "kb:350", "kb:351", "kb:352", "kb:353", "kb:354", "kb:355", "kb:356", "kb:357", 
"kb:359", "kb:360", "kb:362", "kb:363", "kb:364", "kb:365", "kb:366", "kb:367", "kb:368", "kb:369", "kb:371", "kb:372", "kb:373", "kb:374", "kb:375", "kb:376", "kb:377", "kb:378", "kb:380", 
"kb:381", "kb:383", "kb:384", "kb:385", "kb:386", "kb:387", "kb:388", "kb:389", "kb:390", "kb:391", "kb:392", "kb:393", "kb:394", "kb:395", "kb:396", "kb:397", "kb:398", "kb:399", "kb:400", 
"kb:401", "kb:402", "kb:403", "kb:404", "kb:405", "kb:406", "kb:407", "kb:408", "kb:409", "kb:410", "kb:411", "kb:412", "kb:413", "kb:414", "kb:416", "kb:417", "kb:418", "kb:419", "kb:420", 
"kb:421", "kb:423", "kb:424", "kb:425", "kb:428", "kb:429", "kb:430", "kb:431", "kb:432", "kb:433", "kb:434", "kb:435", "kb:436", "kb:438", "kb:439", "kb:440", "kb:441", "kb:442", "kb:443", 
"kb:444", "kb:445", "kb:446", "kb:447", "kb:448", "kb:449", "kb:450", "kb:451", "kb:452", "kb:454", "kb:455", "kb:456", "kb:457", "kb:458", "kb:459", "kb:460", "kb:462", "kb:464", "kb:465", 
"kb:466", "kb:467", "kb:468", "kb:469", "kb:470", "kb:471", "kb:473", "kb:474", "kb:475", "kb:477", "kb:478", "kb:479", "kb:480", "kb:481", "kb:482", "kb:483", "kb:484", "kb:486", "kb:487", 
"kb:488", "kb:489", "kb:490", "kb:492", "kb:493", "kb:495", "kb:496", "kb:498", "kb:499", "kb:500", "kb:501", "kb:502", "kb:503", "kb:504", "kb:505", "kb:506", "kb:507", "kb:508", "kb:509", 
"kb:512", "kb:513", "kb:514", "kb:516", "kb:518", "kb:519", "kb:521", "kb:522", "kb:523", "kb:524", "kb:525", "kb:526", "kb:527", "kb:528", "kb:529", "kb:530", "kb:531", "kb:532", "kb:533", 
"kb:534", "kb:535", "kb:536", "kb:537", "kb:538", "kb:539", "kb:540", "kb:541", "kb:543", "kb:544", "kb:545", "kb:546", "kb:547", "kb:548", "kb:549", "kb:550", "kb:551", "kb:552", "kb:553", 
"kb:554", "kb:555", "kb:556", "kb:557", "kb:558", "kb:560", "kb:562", "kb:563", "kb:564", "kb:565", "kb:566", "kb:567", "kb:568", "kb:569", "kb:572", "kb:573", "kb:574", "kb:575", "kb:576", 
"kb:577", "kb:578", "kb:579", "kb:581", "kb:582", "kb:583", "kb:584", "kb:585", "kb:586", "kb:588", "kb:589", "kb:590", "kb:591", "kb:592", "kb:593", "kb:594", "kb:595", "kb:596", "kb:597", 
"kb:598", "kb:599", "kb:600", "kb:601", "kb:602", "kb:603", "kb:604", "kb:607", "kb:608", "kb:609", "kb:610", "kb:611", "kb:613", "kb:615", "kb:616", "kb:617", "kb:618"}

alg.type = "ocel"
alg.maxExecutionTimeInSeconds = 120
alg.writeSearchTree = true